"use client";

import CustomDataGrid from "@/components/shared/customDataGrid";
import { Separator } from "@/components/ui/separator";
import {
  TAdminBirthCertificate,
  TBirthCertificateDetails,
} from "@/types/birthCertificate";
import { Tooltip } from "@mui/material";
import { GridActionsCellItem, GridColDef } from "@mui/x-data-grid";
import { useQuery } from "@tanstack/react-query";
import axios from "axios";
import { DownloadIcon } from "lucide-react";
import { useState } from "react";
import { downloadbirthcertificate } from "@/lib/generate-docx/birthcertificate";
import { toast } from "react-toastify";

const BirthCertificateList = () => {
  const [download, setDownload] = useState<TAdminBirthCertificate | undefined>(
    undefined
  );
  const { data, isLoading, isError } = useQuery({
    queryFn: async () => {
      const res = await axios.get("/api/birth-certificate");
      const data = res.data as TAdminBirthCertificate[];
      return data;
    },
    queryKey: ["birthCertificateList"],
    staleTime: Infinity,
    retry: 2,
    refetchInterval: 600000,
  });
  if (isError)
    return (
      <div className="flex justify-center items-center">
        <p className="bg-warning px-6 py-2 rounded-lg">No Data found...</p>
      </div>
    );
  const columns: GridColDef[] = [
    {
      field: "system_id",
      headerName: "ID",
      width: 100,
      renderCell: ({ row }: { row: TAdminBirthCertificate }) => {
        return <>NEER-{row.user?.system_id}</>;
      },
    },
    {
      field: "first_name",
      headerName: "First Name",
      width: 150,
    },
    {
      field: "last_name",
      headerName: "Last Name",
      width: 150,
    },
    {
      field: "email",
      headerName: "Email",
      width: 300,
      renderCell: ({ row }: { row: TAdminBirthCertificate }) => {
        return <>{row.first_name}</>;
      },
    },
    { field: "phone", headerName: "Phone", width: 150 },
    {
      field: "birthCertificate",
      type: "actions",
      headerName: "Birth Certificate",
      width: 250,
      cellClassName: "actions",
      getActions: ({ row }: { row: TAdminBirthCertificate }) => {
        return [
          <Tooltip title="Download Birth Certificate" key={row.user?.system_id}>
            <GridActionsCellItem
              label="Download Birth Certificate"
              icon={<DownloadIcon className="text-primary" />}
              onClick={async () => {
                setDownload(row);
                const bcResponse = await axios.get(
                  `/api/birth-certificate/${row.id}`
                );
                const bcData: TBirthCertificateDetails | null = bcResponse.data;
                if (!bcData) {
                  return toast.warn("Birth Certificate Data Not Found");
                }
                downloadbirthcertificate(bcData);
              }}
            />
          </Tooltip>,
        ];
      },
    },
  ];
  const updatedList = data?.map((bcData) => {
    return {
      ...bcData,
      system_id: bcData.user?.system_id,
    };
  });

  return (
    <>
      <h1 className="text-3xl font-extrabold text-primary capitalize">
        Birth Certificate List
      </h1>

      <Separator className="mb-4 bg-gradient-to-r from-primary h-1 via-primary/50 to-popover" />
      <CustomDataGrid
        columns={columns}
        rows={updatedList ?? []}
        loading={isLoading}
      />
    </>
  );
};
export default BirthCertificateList;
